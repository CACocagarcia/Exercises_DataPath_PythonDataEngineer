{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN7wmUWkg6ZqwQ1ICJSp+xD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Environment Set Up**"],"metadata":{"id":"WuFlbK68cnsk"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount(\"/content/drive\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_f9ABiTXdDel","executionInfo":{"status":"ok","timestamp":1692660975961,"user_tz":360,"elapsed":24573,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"8dcf9f03-6aae-4fa7-e91e-779561dd90a0"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"Z3gO4rAebd5b","executionInfo":{"status":"ok","timestamp":1692661234400,"user_tz":360,"elapsed":41847,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"outputs":[],"source":["!apt-get install openjdk-8-jdk-headless -qq > /dev/ull\n","!wget -q  https://archive.apache.org/dist/spark/spark-3.2.3/spark-3.2.3-bin-hadoop3.2.tgz"]},{"cell_type":"code","source":["# descompremir la version de spark\n","!tar xf spark-3.2.3-bin-hadoop3.2.tgz"],"metadata":{"id":"weyGNzXncwgM","executionInfo":{"status":"ok","timestamp":1692661248284,"user_tz":360,"elapsed":5331,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.2.3-bin-hadoop3.2\""],"metadata":{"id":"nvcElEDuczdv","executionInfo":{"status":"ok","timestamp":1692661256388,"user_tz":360,"elapsed":349,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Instalar la librería findspark\n","!pip install -q findspark"],"metadata":{"id":"GtUvCOdDc1Pj","executionInfo":{"status":"ok","timestamp":1692661267203,"user_tz":360,"elapsed":5360,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Instalar pyspark\n","!pip install -q pyspark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NB9uDXKic20g","executionInfo":{"status":"ok","timestamp":1692661327665,"user_tz":360,"elapsed":54543,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"b8a11112-6abe-491e-ea4b-d8430a5454c9"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m310.8/310.8 MB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}]},{"cell_type":"code","source":["import findspark\n","findspark.init()\n","import pandas as pd\n","import numpy as np\n","import pyspark\n","import math"],"metadata":{"id":"q-SGsyahc4Tv","executionInfo":{"status":"ok","timestamp":1692664178022,"user_tz":360,"elapsed":313,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["import findspark\n","findspark.init()\n","from pyspark.sql import SparkSession\n","\n","spark = SparkSession.builder.getOrCreate()\n","sc = spark.sparkContext"],"metadata":{"id":"O8EXqOjcfid8","executionInfo":{"status":"ok","timestamp":1692661605995,"user_tz":360,"elapsed":325,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["**EJERCICIO 1** Cree un RDD llamado lenguajes que contenga los siguientes lenguajes de programación: Python, R, C, Scala, Rugby y SQL."],"metadata":{"id":"l8r8V_bperz_"}},{"cell_type":"code","source":["rdd_lang = sc.parallelize(['Python','R','C','Scala','Rugby','SQL'])\n","rdd_lang.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E4YEujvKeq4e","executionInfo":{"status":"ok","timestamp":1692662413256,"user_tz":360,"elapsed":314,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"08c1cb54-c14b-416d-bb68-dea621a3454c"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Python', 'R', 'C', 'Scala', 'Rugby', 'SQL']"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["**EJERCICIO 1A** Obtenga un nuevo RDD a partir del RDD lenguajes donde todos los lenguajes de programación estén en mayúsculas."],"metadata":{"id":"MmvWPYIRgNUf"}},{"cell_type":"code","source":["rdd_lang_upper = rdd_lang.map(lambda x:(x.upper()))\n","rdd_lang_upper.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWAUeotWgRLW","executionInfo":{"status":"ok","timestamp":1692662501435,"user_tz":360,"elapsed":912,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"0aae55ea-3ff5-444b-accd-e35b867abab2"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['PYTHON', 'R', 'C', 'SCALA', 'RUGBY', 'SQL']"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["**EJERCICIO 1B** Obtenga un nuevo RDD a partir del RDD lenguajes donde todos los lenguajes de programación estén en minúsculas."],"metadata":{"id":"qB-QLzdkjGio"}},{"cell_type":"code","source":["rdd_lang_lower = rdd_lang.map(lambda x:(x.lower()))\n","rdd_lang_lower.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yx5BQJ4YjLji","executionInfo":{"status":"ok","timestamp":1692662609080,"user_tz":360,"elapsed":634,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"a06fec10-65a9-4468-c897-8f4218d2c173"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['python', 'r', 'c', 'scala', 'rugby', 'sql']"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["**EJERCICIO 1C** Cree un nuevo RDD que solo contenga aquellos lenguajes de programación que comiencen con la letra R."],"metadata":{"id":"RWtDLIDijgVv"}},{"cell_type":"code","source":["rdd_lang_strt_r = rdd_lang.filter(lambda x: x.startswith('R'))\n","rdd_lang_strt_r.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XKKpoa5gjszl","executionInfo":{"status":"ok","timestamp":1692662753854,"user_tz":360,"elapsed":306,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"296a95b5-868c-49dd-b8ed-47ecb2a2826c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['R', 'Rugby']"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["**EJERCICIO 2** Cree un RDD llamado pares que contenga los números pares existentes en el intervalo [20:30]"],"metadata":{"id":"jhC3KzqmkG3h"}},{"cell_type":"code","source":["numbers =[20,22,24,26,28,30]"],"metadata":{"id":"4KWHEvVqkLbG","executionInfo":{"status":"ok","timestamp":1692664595781,"user_tz":360,"elapsed":311,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["rdd_even = sc.parallelize(numbers)\n","rdd_even.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uxrvhiG8mBXl","executionInfo":{"status":"ok","timestamp":1692664607318,"user_tz":360,"elapsed":575,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"cbd9958f-b8ae-4e82-b76b-6bf83d5d94d8"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[20, 22, 24, 26, 28, 30]"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["**Ejercicio 2A** Cree el RDD llamado sqrt, este debe contener la raíz cuadrada de los elementos que componen el RDD pares."],"metadata":{"id":"fD_1HyKroAff"}},{"cell_type":"code","source":["rdd_even_sqrt = rdd_even.map(lambda x:(math.sqrt(x)))\n","rdd_even_sqrt.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jhuDLQGUn-w8","executionInfo":{"status":"ok","timestamp":1692664612615,"user_tz":360,"elapsed":672,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"6420806b-779f-4cc9-8017-3f0d09d9ea82"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4.47213595499958,\n"," 4.69041575982343,\n"," 4.898979485566356,\n"," 5.0990195135927845,\n"," 5.291502622129181,\n"," 5.477225575051661]"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["**Ejercicio 2B** Obtenga una lista compuesta por los números pares en el intervalo [20;30] y sus respectivas raíces cuadradas."],"metadata":{"id":"PTY2RuW_rNKr"}},{"cell_type":"code","source":["rdd_even_sqrt = rdd_even.map(lambda x:(x, math.sqrt(x)))\n","rdd_even_sqrt.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ydyMe5quraWv","executionInfo":{"status":"ok","timestamp":1692664810480,"user_tz":360,"elapsed":658,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"8f60622f-5bb5-4119-aa13-179a144b800f"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(20, 4.47213595499958),\n"," (22, 4.69041575982343),\n"," (24, 4.898979485566356),\n"," (26, 5.0990195135927845),\n"," (28, 5.291502622129181),\n"," (30, 5.477225575051661)]"]},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["**Ejercicio 2C** Eleve el número de particiones del RDD sqrt a 20"],"metadata":{"id":"vqEDUj9bsCay"}},{"cell_type":"code","source":["rdd_even_sqrt.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iPF2Oos5sPNW","executionInfo":{"status":"ok","timestamp":1692664955968,"user_tz":360,"elapsed":379,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"6ca21795-0b42-43c1-84aa-19d4220af44d"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["rdd_p20 = rdd_even_sqrt.repartition(20)\n","rdd_p20.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yDcBIb2-sZzR","executionInfo":{"status":"ok","timestamp":1692665361118,"user_tz":360,"elapsed":334,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"75a988ee-aa82-403e-ca88-987fa6256532"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["20"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["rdd_p20.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n8g4IA8dt8mO","executionInfo":{"status":"ok","timestamp":1692665377711,"user_tz":360,"elapsed":1970,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"5301360f-f81a-43e4-bb57-715c1685d606"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(20, 4.47213595499958),\n"," (22, 4.69041575982343),\n"," (24, 4.898979485566356),\n"," (26, 5.0990195135927845),\n"," (28, 5.291502622129181),\n"," (30, 5.477225575051661)]"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["Ejercicio 2D Si tuviera que disminuir el número de particiones luego de haberlo establecido en 20, ¿qué función utilizaría para hacer más eficiente su código?"],"metadata":{"id":"ogmRvVtnuHuT"}},{"cell_type":"code","source":["rdd_p2 = rdd_p20.repartition(2)\n","rdd_p2.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zv2Bl0BZuM0A","executionInfo":{"status":"ok","timestamp":1692665839525,"user_tz":360,"elapsed":843,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"4bb14f43-850f-4972-9984-d4bf53a894cc"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["rdd_p2.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lW4qhhoKvxMd","executionInfo":{"status":"ok","timestamp":1692665853912,"user_tz":360,"elapsed":715,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"860a9c2d-dd20-4bf8-9533-4c1a11d1c7c7"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(26, 5.0990195135927845),\n"," (28, 5.291502622129181),\n"," (30, 5.477225575051661),\n"," (20, 4.47213595499958),\n"," (22, 4.69041575982343),\n"," (24, 4.898979485566356)]"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["**Ejercicio 3** Cree un RDD del tipo clave valor a partir de los datos adjuntos como recurso a esta lección. Tenga en cuenta que deberá procesar el RDD leído para obtener el resultado solicitado. Supongamos que el RDD resultante de tipo clave valor refleja las transacciones realizadas por número de cuentas. Obtenga el monto total por cada cuenta."],"metadata":{"id":"3IauzPBAwnyK"}},{"cell_type":"code","source":["'''\n","  In this block of Code I'm reading and extracting\n","  each line of the file and saving it into the file_data variable\n","\n","  The Type is a List\n","\n","  Using the List I can create a RDD\n","'''\n","file = open(\"/content/drive/MyDrive/Python Data Engineer/Sesion2/data/num.txt\")\n","file_data = file.readlines()\n","file.close()\n","# len(file_data)\n","# print(file_data) #List will contain string values like: '70\\n', '69\\n', '16\\n', '80\\n', '85\\n', '81\\n' - going to remove the \\n\n","\n","for i in range(len(file_data)):\n","  file_data[i] = file_data[i].replace('\\n', '')\n","\n","print(file_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzVqTjdzwlGg","executionInfo":{"status":"ok","timestamp":1692666673491,"user_tz":360,"elapsed":15,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"44a830a9-adcb-4fee-f304-be7eb0dd4c43"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["['70', '69', '16', '80', '85', '81', '93', '5', '78', '21', '13', '77', '93', '31', '16', '84', '64', '29', '45', '24', '64', '31', '2', '55', '51', '92', '72', '84', '22', '50', '17', '5', '96', '63', '67', '82', '52', '38', '86', '23', '90', '96', '53', '95', '10', '28', '75', '72', '67', '82', '40', '60', '34', '26', '47', '55', '10', '46', '86', '46', '64', '37', '31', '43', '74', '44', '87', '7', '54', '95', '43', '79', '79', '53', '62', '13', '37', '45', '40', '81', '50', '41', '30', '81', '27', '27', '49', '97', '73', '99', '77', '64', '47', '68', '8', '79', '13', '49', '75', '2', '23', '94', '21', '2', '10', '9', '19', '75', '7', '27', '55', '38', '10', '39', '73', '21', '81', '1', '61', '62', '5', '91', '68', '35', '81', '91', '34', '24', '63', '61', '32', '11', '74', '43', '98', '18', '25', '33', '31', '32', '42', '97', '11', '28', '14', '49', '34', '78', '50', '76', '25', '79', '61', '15', '57', '60', '61', '52', '94', '32', '30', '71', '16', '32', '26', '30', '42', '36', '45', '1', '91', '47', '19', '43', '71', '41', '95', '12', '64', '95', '51', '39', '55', '99', '12', '98', '97', '37', '25', '45', '36', '13', '63', '81', '16', '56', '33', '61', '31', '39', '84', '30', '97', '37', '29', '94', '76', '39', '62', '12', '97', '90', '50', '85', '25', '28', '35', '63', '25', '56', '43', '18', '57', '20', '62', '51', '63', '27', '82', '71', '24', '7', '70']\n"]}]},{"cell_type":"code","source":["rdd_primaryk_values = sc.parallelize(file_data) #Creating RDD from List\n","# rdd_primaryk_values.collect()"],"metadata":{"id":"zMwT-QJjz1s7","executionInfo":{"status":"ok","timestamp":1692667020936,"user_tz":360,"elapsed":327,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["rdd_primaryKey = rdd_primaryk_values.zipWithIndex()\n","rdd_primaryKey.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aMh-tOKh0NJ5","executionInfo":{"status":"ok","timestamp":1692667185345,"user_tz":360,"elapsed":756,"user":{"displayName":"Carlos Coca","userId":"18148525189835533262"}},"outputId":"64d57b5d-b4fb-499f-8bd1-d1b010e18b75"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('70', 0),\n"," ('69', 1),\n"," ('16', 2),\n"," ('80', 3),\n"," ('85', 4),\n"," ('81', 5),\n"," ('93', 6),\n"," ('5', 7),\n"," ('78', 8),\n"," ('21', 9),\n"," ('13', 10),\n"," ('77', 11),\n"," ('93', 12),\n"," ('31', 13),\n"," ('16', 14),\n"," ('84', 15),\n"," ('64', 16),\n"," ('29', 17),\n"," ('45', 18),\n"," ('24', 19),\n"," ('64', 20),\n"," ('31', 21),\n"," ('2', 22),\n"," ('55', 23),\n"," ('51', 24),\n"," ('92', 25),\n"," ('72', 26),\n"," ('84', 27),\n"," ('22', 28),\n"," ('50', 29),\n"," ('17', 30),\n"," ('5', 31),\n"," ('96', 32),\n"," ('63', 33),\n"," ('67', 34),\n"," ('82', 35),\n"," ('52', 36),\n"," ('38', 37),\n"," ('86', 38),\n"," ('23', 39),\n"," ('90', 40),\n"," ('96', 41),\n"," ('53', 42),\n"," ('95', 43),\n"," ('10', 44),\n"," ('28', 45),\n"," ('75', 46),\n"," ('72', 47),\n"," ('67', 48),\n"," ('82', 49),\n"," ('40', 50),\n"," ('60', 51),\n"," ('34', 52),\n"," ('26', 53),\n"," ('47', 54),\n"," ('55', 55),\n"," ('10', 56),\n"," ('46', 57),\n"," ('86', 58),\n"," ('46', 59),\n"," ('64', 60),\n"," ('37', 61),\n"," ('31', 62),\n"," ('43', 63),\n"," ('74', 64),\n"," ('44', 65),\n"," ('87', 66),\n"," ('7', 67),\n"," ('54', 68),\n"," ('95', 69),\n"," ('43', 70),\n"," ('79', 71),\n"," ('79', 72),\n"," ('53', 73),\n"," ('62', 74),\n"," ('13', 75),\n"," ('37', 76),\n"," ('45', 77),\n"," ('40', 78),\n"," ('81', 79),\n"," ('50', 80),\n"," ('41', 81),\n"," ('30', 82),\n"," ('81', 83),\n"," ('27', 84),\n"," ('27', 85),\n"," ('49', 86),\n"," ('97', 87),\n"," ('73', 88),\n"," ('99', 89),\n"," ('77', 90),\n"," ('64', 91),\n"," ('47', 92),\n"," ('68', 93),\n"," ('8', 94),\n"," ('79', 95),\n"," ('13', 96),\n"," ('49', 97),\n"," ('75', 98),\n"," ('2', 99),\n"," ('23', 100),\n"," ('94', 101),\n"," ('21', 102),\n"," ('2', 103),\n"," ('10', 104),\n"," ('9', 105),\n"," ('19', 106),\n"," ('75', 107),\n"," ('7', 108),\n"," ('27', 109),\n"," ('55', 110),\n"," ('38', 111),\n"," ('10', 112),\n"," ('39', 113),\n"," ('73', 114),\n"," ('21', 115),\n"," ('81', 116),\n"," ('1', 117),\n"," ('61', 118),\n"," ('62', 119),\n"," ('5', 120),\n"," ('91', 121),\n"," ('68', 122),\n"," ('35', 123),\n"," ('81', 124),\n"," ('91', 125),\n"," ('34', 126),\n"," ('24', 127),\n"," ('63', 128),\n"," ('61', 129),\n"," ('32', 130),\n"," ('11', 131),\n"," ('74', 132),\n"," ('43', 133),\n"," ('98', 134),\n"," ('18', 135),\n"," ('25', 136),\n"," ('33', 137),\n"," ('31', 138),\n"," ('32', 139),\n"," ('42', 140),\n"," ('97', 141),\n"," ('11', 142),\n"," ('28', 143),\n"," ('14', 144),\n"," ('49', 145),\n"," ('34', 146),\n"," ('78', 147),\n"," ('50', 148),\n"," ('76', 149),\n"," ('25', 150),\n"," ('79', 151),\n"," ('61', 152),\n"," ('15', 153),\n"," ('57', 154),\n"," ('60', 155),\n"," ('61', 156),\n"," ('52', 157),\n"," ('94', 158),\n"," ('32', 159),\n"," ('30', 160),\n"," ('71', 161),\n"," ('16', 162),\n"," ('32', 163),\n"," ('26', 164),\n"," ('30', 165),\n"," ('42', 166),\n"," ('36', 167),\n"," ('45', 168),\n"," ('1', 169),\n"," ('91', 170),\n"," ('47', 171),\n"," ('19', 172),\n"," ('43', 173),\n"," ('71', 174),\n"," ('41', 175),\n"," ('95', 176),\n"," ('12', 177),\n"," ('64', 178),\n"," ('95', 179),\n"," ('51', 180),\n"," ('39', 181),\n"," ('55', 182),\n"," ('99', 183),\n"," ('12', 184),\n"," ('98', 185),\n"," ('97', 186),\n"," ('37', 187),\n"," ('25', 188),\n"," ('45', 189),\n"," ('36', 190),\n"," ('13', 191),\n"," ('63', 192),\n"," ('81', 193),\n"," ('16', 194),\n"," ('56', 195),\n"," ('33', 196),\n"," ('61', 197),\n"," ('31', 198),\n"," ('39', 199),\n"," ('84', 200),\n"," ('30', 201),\n"," ('97', 202),\n"," ('37', 203),\n"," ('29', 204),\n"," ('94', 205),\n"," ('76', 206),\n"," ('39', 207),\n"," ('62', 208),\n"," ('12', 209),\n"," ('97', 210),\n"," ('90', 211),\n"," ('50', 212),\n"," ('85', 213),\n"," ('25', 214),\n"," ('28', 215),\n"," ('35', 216),\n"," ('63', 217),\n"," ('25', 218),\n"," ('56', 219),\n"," ('43', 220),\n"," ('18', 221),\n"," ('57', 222),\n"," ('20', 223),\n"," ('62', 224),\n"," ('51', 225),\n"," ('63', 226),\n"," ('27', 227),\n"," ('82', 228),\n"," ('71', 229),\n"," ('24', 230),\n"," ('7', 231),\n"," ('70', 232)]"]},"metadata":{},"execution_count":72}]}]}